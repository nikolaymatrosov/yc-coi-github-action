# This is a basic workflow to help you get started with Actions

name: Push To Yandex Cloud CR

# Controls when the action will run. 
on:
  push:
    branches: [ main ]
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}


      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpk28lsfu91rns28316
          CR_REPOSITORY: yc-coi-github-action
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.0.1
        env:
          IMAGE_URL: cr.yandex/crpk28lsfu91rns28316/yc-coi-github-action:${{ github.sha }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: b1gbmkj63hnlfu8877sn
          vm-name: yc-action-demo
          vm-service-account-id: aje9nl4jk3fd04164943
          vm-cores: 2
          vm-memory: 2 GB
          vm-core-fraction: 100
          vm-zone-id: ru-central1-a
          vm-subnet-id: e9bobc1ueq7aue8csi6m
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.yaml'
